library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;

entity SEQ is
	port(clk, cs, r, hit, mfc : in std_logic;
		state : out std_logic_vector(3 downto 0));
end SEQ;

architecture behav of SEQ is

--signal clk : std_logic;
begin
process is
variable curr_state : std_logic_vector(3 downto 0) := X"0";
begin
if clk = '1' then
case curr_state is
when X"0" =>
if cs = '0' then curr_state := X"1"; end if;
when X"1" => 
if cs = '1' then curr_state := X"2"; end if;
when X"2" => curr_state := X"3";
when X"3" => 
if hit = '0' then curr_state := X"4"; 
elsif hit = '1' then curr_state := X"6"; end if;
when X"4" =>
if mfc = '1' then curr_state := X"5"; end if;
when X"5" => curr_state := X"6";
when X"6" =>
if cs = '0' then curr_state := X"1"; end if;
end case;
state <= curr_state;
end if;
wait on clk;
end process;
end behav;
